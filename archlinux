# Journey


# The journey of a thousand miles begins with one step:
# 1. System bringup: Installation on the machine
# 1.1 System Env:
#     UEFI: Disable CMS feautre. (UEFI && GPT only)
#     Archlinux: Network setup please google it first.
#
#     reboot and login archlinuxiso system.

0. pacman install git && git clone https://github.com/wds1/linux-dev-env.git

1. efivar -l or efibootmgr -v (Make sure UEFI mode)

2. fdisk -l (List all of your HARDWARE DISK, make sure the disk is correct)

3. fdisk /dev/sda (*GPT*, sda that is I want to set it up disk)
   Create 3 ~ 4 partitions, if you need 4(esp).
   I just create 3 partitions, sda1(Boot, TYPE: UEFI), sda2(SWAP, TYPE: swap), sda3(Filesystem, TYPE: ext4 or ...)

4. mkfs.vfat /dev/sda1 (UEFI system), mkfs.swap /dev/sda2, mkfs.ext4 /dev/sda3

5. swapon /dev/sda #enable swap.

6. mount /dev/sda3 /mnt (filesystem)
   mount /dev/sda1 /mnt/boot/EFI or mount /dev/sdax(esp if need)  /mnt/boot (esp)

7. Network setup please google it.

8. nano or vi /etc/pacman.d/mirrorlist (Change mirrorlist)

9. pacman -Sy

10. pacstrap /mnt base base-devel

11. genfstab -U -p /mnt >> /mnt/etc/fstab

12. arch-chroot /mnt

13. vim /etc/pacman.d/mirrorlist

14. If need: ln -sf /usr/share/zoneinfo/Region/City /etc/localtime; hwclock --systohc --utc

15. unmaks en_US.UTF-8 && locale-gen

16. echo LANG=en_US.UTF-8 >> /etc/locale.conf; export LANG=en_US.UTF-8

17. echo *HOSTNAME* >> /etc/hostname

18. vim /etc/hosts
    127.0.0.1	localhost
    ::1		localhost
    127.0.1.1	*HOSTNAME*.localdomain	*HOSTNAME*

19. systemctl enable dhcpcd@eth0.service

20. vim /etc/pacman.conf, add:
[archlinuxfr]
Server = http://repo.archlinux.fr/$arch

pacman -Sy


21. pacman -S linux-headers linux-lts linux-lts-headers (intel-ucode)

#if EFI
*EFI*:
pacman -S efibootmgr grub-efi-x86_64
22. grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub --recheck --debug

#Tested, It had no effect on me. Please ignore step: 24
22.1. cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo (Not sure about this, need to check)
#else
*NON EF*: GeneralBios:
pacman -S grub
grub-install --target=i386-pc /dev/sdx (Maybe I need to find out why target must eq i386)
#endif

23. grub-mkconfig -o /boot/grub/grub.cfg

24. user add:
useradd -m -g users -G wheel,storage,power -s /bin/bash youtube
passwd youtube


#APPs install
sudo pacman -S yaourt git openssh fcitx
pacman -S xorg-server xorg-xinit xorg-apps 

##############################################################################################
sudo pacman -S fcitx-im # 全部安装
sudo pacman -S fcitx-configtool # 图形化配置工具

在~/.xprofile文件里面添加下面三行

export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS="@im=fcitx"

作者：MrJiRen
链接：https://www.jianshu.com/p/9e8fe8892b61
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
##############################################################################################
*Not try for yaourt* 加速yaourt

都知道pacman能够调用外部下载工具来代替默认的wget来给pacman提速
比如将/etc/pacman.conf中
XferCommand = /usr/bin/wget –passive-ftp -c -O %o %u
注释掉,同时添加
XferCommand = /usr/bin/axel -o %o %u
即可使用axel多线程下载工具
而要让yaourt也支持多线程,只需修改/etc/makepkg.conf

将’http::/usr/bin/wget -c -t 3 –waitretry=3 -O %o %u’改成了’http::/usr/bin/axel -o %o %u’ 
##############################################################################################

yaourt nvidia

#xfce4
thunar

#i3
pacman -S  vim xorg-twm xorg-xclock i3 dmenu feh dunst  networkmanager network-manager-applet lxappearance
pacman -S lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings

#kde
